import { Button } from "@/components/ui/button";
import { Info, Gift } from "lucide-react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { useState } from "react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { StampCardFormValues } from "@/types/stamp-card";

interface RewardsStepProps {
  formValues: StampCardFormValues;
}

export const RewardsStep = ({ formValues }: RewardsStepProps) => {
  const [selectedType, setSelectedType] = useState<string | null>(null);
  const [expiryEnabled, setExpiryEnabled] = useState(false);

  const rewardTypes = [
    { id: 'main', color: '#12B76A', bgColor: '#E7F9F1' },
    { id: 'signup', color: '#F79009', bgColor: '#FFF9E5' },
    { id: 'interim', color: '#444CE7', bgColor: '#EEF4FF' },
  ];

  return (
    <div className="space-y-6">
      <div className="space-y-4">
        <h2 className="text-2xl font-semibold text-[#1A1F2C]">My rewards</h2>
        <p className="text-base text-[#1A1F2C]">Make these something your customers will love!</p>
        <div className="flex items-center gap-2 text-sm">
          <span className="text-[#1A1F2C]">Note: In-app vouchers are generated by default. If you don't want these, please proceed by adding rewards and then</span>
          <a href="#" className="text-blue-500 hover:underline">contact us</a>
          <Info className="h-4 w-4 text-[#1A1F2C]" />
        </div>
      </div>

      <Dialog>
        <DialogTrigger asChild>
          <Button>
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8 3.33337V12.6667" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              <path d="M3.33331 8H12.6666" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
            Add reward
          </Button>
        </DialogTrigger>
        <DialogContent className="sm:max-w-[525px]">
          <DialogHeader>
            <DialogTitle>Add a reward</DialogTitle>
          </DialogHeader>
          <div className="space-y-6 py-4">
            <div className="space-y-4">
              <Label>Reward type*</Label>
              <div className="flex gap-4">
                {rewardTypes.map((type) => (
                  <div
                    key={type.id}
                    onClick={() => setSelectedType(type.id)}
                    className={`flex flex-col items-center gap-2 rounded-lg border p-4 cursor-pointer transition-all ${
                      selectedType === type.id
                        ? `border-[${type.color}]`
                        : selectedType
                        ? 'opacity-50 border-gray-200'
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <div className={`h-12 w-12 flex items-center justify-center rounded-lg`} style={{ backgroundColor: type.bgColor }}>
                      <Gift 
                        size={24} 
                        stroke={type.color}
                        className="transition-opacity"
                      />
                    </div>
                    <span className="text-sm font-medium capitalize">{type.id}</span>
                  </div>
                ))}
              </div>
            </div>
            <div className="space-y-2">
              <Label>Reward name*</Label>
              <Input placeholder="Free coffee" />
              <div className="text-sm text-gray-500">after {formValues.stamps} stamps</div>
            </div>
            <div className="space-y-4">
              <Label>Settings</Label>
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    <span className="text-sm">Expires after</span>
                    <Info className="h-4 w-4 text-gray-400" />
                  </div>
                  <Switch
                    checked={expiryEnabled}
                    onCheckedChange={setExpiryEnabled}
                  />
                </div>
                {expiryEnabled && (
                  <div className="flex gap-4">
                    <Input type="number" placeholder="1" className="w-24" />
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="Select..." />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="days">Days</SelectItem>
                        <SelectItem value="weeks">Weeks</SelectItem>
                        <SelectItem value="months">Months</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                )}
              </div>
            </div>
            <Button className="w-full">Save reward</Button>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};