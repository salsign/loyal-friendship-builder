import { Button } from "@/components/ui/button";
import { Info } from "lucide-react";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { useState } from "react";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";

export const RewardsStep = () => {
  const [selectedType, setSelectedType] = useState<string | null>(null);
  const [expiryEnabled, setExpiryEnabled] = useState(false);

  const rewardTypes = [
    { id: 'main', color: '#12B76A', bgColor: '#E7F9F1' },
    { id: 'signup', color: '#F79009', bgColor: '#FFF9E5' },
    { id: 'interim', color: '#444CE7', bgColor: '#EEF4FF' },
  ];

  return (
    <div className="space-y-6">
      <div className="space-y-4">
        <h2 className="text-2xl font-semibold text-[#1A1F2C]">My rewards</h2>
        <p className="text-base text-[#1A1F2C]">Make these something your customers will love!</p>
        <div className="flex items-center gap-2 text-sm">
          <span className="text-[#1A1F2C]">Note: In-app vouchers are generated by default. If you don't want these, please proceed by adding rewards and then</span>
          <a href="#" className="text-blue-500 hover:underline">contact us</a>
          <Info className="h-4 w-4 text-[#1A1F2C]" />
        </div>
      </div>

      <Dialog>
        <DialogTrigger asChild>
          <Button>
            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8 3.33337V12.6667" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              <path d="M3.33331 8H12.6666" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
            Add reward
          </Button>
        </DialogTrigger>
        <DialogContent className="sm:max-w-[525px]">
          <DialogHeader>
            <DialogTitle>Add a reward</DialogTitle>
          </DialogHeader>
          <div className="space-y-6 py-4">
            <div className="space-y-4">
              <Label>Reward type*</Label>
              <div className="flex gap-4">
                {rewardTypes.map((type) => (
                  <div
                    key={type.id}
                    onClick={() => setSelectedType(type.id)}
                    className={`flex flex-col items-center gap-2 rounded-lg border p-4 cursor-pointer transition-all ${
                      selectedType === type.id
                        ? `border-[${type.color}]`
                        : selectedType
                        ? 'opacity-50 border-gray-200'
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <div className={`h-12 w-12 flex items-center justify-center rounded-lg`} style={{ backgroundColor: type.bgColor }}>
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 15C12.7956 15 13.5587 14.6839 14.1213 14.1213C14.6839 13.5587 15 12.7956 15 12C15 11.2044 14.6839 10.4413 14.1213 9.87868C13.5587 9.31607 12.7956 9 12 9C11.2044 9 10.4413 9.31607 9.87868 9.87868C9.31607 10.4413 9 11.2044 9 12C9 12.7956 9.31607 13.5587 9.87868 14.1213C10.4413 14.6839 11.2044 15 12 15Z" stroke={type.color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <path d="M19.7778 12C19.7778 12.9137 19.6323 13.8196 19.35 14.6793C19.0677 15.5389 18.6531 16.3399 18.1252 17.0505C17.5973 17.7611 16.9633 18.3711 16.2445 18.8709C15.5256 19.3706 14.7335 19.7516 13.9 20M4.22223 12C4.22223 11.0863 4.36771 10.1804 4.65002 9.32074C4.93233 8.46108 5.34694 7.66013 5.87484 6.94954C6.40274 6.23894 7.03671 5.62891 7.75557 5.12914C8.47442 4.62936 9.26654 4.24842 10.1 4M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z" stroke={type.color} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                    </div>
                    <span className="text-sm font-medium capitalize">{type.id}</span>
                  </div>
                ))}
              </div>
            </div>
            <div className="space-y-2">
              <Label>Reward name*</Label>
              <Input placeholder="Free coffee" />
              <div className="text-sm text-gray-500">after 6 stamps</div>
            </div>
            <div className="space-y-4">
              <Label>Settings</Label>
              <div className="space-y-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center gap-2">
                    <span className="text-sm">Expires after</span>
                    <Info className="h-4 w-4 text-gray-400" />
                  </div>
                  <Switch
                    checked={expiryEnabled}
                    onCheckedChange={setExpiryEnabled}
                  />
                </div>
                {expiryEnabled && (
                  <div className="flex gap-4">
                    <Input type="number" placeholder="1" className="w-24" />
                    <Select>
                      <SelectTrigger>
                        <SelectValue placeholder="Select..." />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="days">Days</SelectItem>
                        <SelectItem value="weeks">Weeks</SelectItem>
                        <SelectItem value="months">Months</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                )}
              </div>
            </div>
            <Button className="w-full">Save reward</Button>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};